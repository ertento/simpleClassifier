from sklearn.neural_network import MLPClassifier
from sklearn.model_selection import GridSearchCV
import pandas as pd
from pandas import read_csv
from numpy import ravel
# Read the data
training_data = read_csv('data/trainingData.csv')
training_labels = read_csv('data/trainingLabels.csv')
# setup Grid Search for MLP
mlp = MLPClassifier()
# values to test
parameters = {'max_iter': (100, 200, 300)}
# apply grid search
gs = GridSearchCV(mlp, parameters)
gs.fit(training_data, ravel(training_labels))
#print(pd.DataFrame(gs.cv_results_)
#[['params','mean_test_score','rank_test_score']])
text=pd.DataFrame(gs.cv_results_)[['params','mean_test_score','rank_test_score']]
print(text)
with open("grid_output.txt","w")as f:
    f.write(text.to_string())
final_model = gs.best_estimator_
